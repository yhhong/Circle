apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.fernandocejas.frodo'
apply plugin: 'me.tatarka.retrolambda'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

        applicationId globalConfiguration.getAt("androidApplicationId")
        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")
        testInstrumentationRunner globalConfiguration.getAt("testInstrumentationRunner")
        testApplicationId globalConfiguration.getAt("testApplicationId")
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'            //Some libraries have issues with this.
        disable 'OldTargetApi'
        //Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities'             //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder'  //For testing purpose. This is safe to remove.
    }

    signingConfigs {
        debug {
            storeFile file('../buildsystem/debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            storeFile file("../buildsystem/aspirecn.keystore")
            storePassword "aspire"
            keyAlias "zhuowang"
            keyPassword "aspire"
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            debuggable true
        }
        release {
            signingConfig signingConfigs.release
            debuggable true
        }
    }
    sourceSets {
        main { jniLibs.srcDirs = ['libs'] }
        debug { assets.srcDirs = ['src/debug/assets'] }
        release { assets.srcDirs = ['src/release/assets'] }
    }
}

dependencies {
    def presentationDependencies = rootProject.ext.presentationDependencies
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':layer-data')
    apt presentationDependencies.daggerCompiler
    provided presentationDependencies.javaxAnnotation
    compile presentationDependencies.appcompatv7
    compile presentationDependencies.constraintLayout
    compile presentationDependencies.design
    compile presentationDependencies.dagger
    compile presentationDependencies.butterKnife
    compile presentationDependencies.recyclerView
    compile presentationDependencies.rxJava
    compile presentationDependencies.rxAndroid
    compile presentationDependencies.rxBinding
    compile presentationDependencies.rxBindingSupportV4
    compile presentationDependencies.rxBindingAppcompatV7
    compile presentationDependencies.umeng
    compile presentationDependencies.picasso
    compile presentationDependencies.picassoTrans
    debugCompile presentationDependencies.leakCanaryAndroid
    releaseCompile presentationDependencies.leakCanaryAndroidNoOp

    def presentationTestDependencies = rootProject.ext.presentationTestDependencies
    testCompile presentationTestDependencies.junit
    androidTestCompile(presentationTestDependencies.espressoCore, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}

